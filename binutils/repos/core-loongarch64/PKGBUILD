# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Frederik Schwan <freswa at archlinux dot org>
# Contributor:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc

pkgname=binutils
pkgver=2.37
pkgrel=4
pkgdesc='A set of programs to assemble and manipulate binary and object files'
arch=('x86_64' 'loongarch64')
url='https://www.gnu.org/software/binutils/'
license=('GPL3' 'GPL' 'FDL1.3' 'custom:FSFAP')
groups=(base-devel)
depends=(glibc zlib libelf)
checkdepends=(dejagnu debuginfod bc)
optdepends=('debuginfod: for debuginfod server/client functionality')
conflicts=(binutils-multilib)
replaces=(binutils-multilib)
options=(staticlibs !distcc !ccache debug)
#_commit=cb5f6a3e146cc70bc2d864989386df80acec5d3e
#source=(git+https://sourceware.org/git/binutils-gdb.git#commit=$_commit)
#_commit=f9b0887de1111349310acf79326f6b33bb0cc221 # upstream_v4.1
_commit=c4c43c430fd5734b0583006f170aa177118d6f8b # test-tmp-binutils-nopic
source=("git+https://github.com/loongson/binutils-gdb.git#commit=$_commit"
        gold-warn-unsupported.patch
        fix-incorrect-undefined-symbol.patch)
sha256sums=('SKIP'
            '2d430b66f84a19c154725ec535280c493be1d34f1a90f95208dce02fecd0e4e4'
            'fd33b2f8cac7561cecf3fdbb5a50fd2f2dfa6420516cbe57c47784a06fa16bf6')
validpgpkeys=(3A24BC1E8FB409FA9F14371813FCEF89DD9E3C4F)

prepare() {
  [[ ! -d binutils-gdb ]] && ln -s binutils-$pkgver binutils-gdb
  mkdir -p binutils-build

  cd binutils-gdb

  # Turn off development mode (-Werror, gas run-time checks, date in sonames)
  sed -i '/^development=/s/true/false/' bfd/development.sh

  # Creds @Fedora
  # Change the gold configuration script to only warn about
  # unsupported targets.  This allows the binutils to be built with
  # BPF support enabled.
  patch -Np1 -i "${srcdir}"/gold-warn-unsupported.patch

  # fix incorrect "undefined reference" errors
  # https://sourceware.org/bugzilla/show_bug.cgi?id=28879
  #patch -Np1 -i "${srcdir}"/fix-incorrect-undefined-symbol.patch
}

build() {
  cd binutils-build

  "$srcdir/binutils-gdb/configure" \
    --prefix=/usr \
    --with-lib-path=/usr/lib:/usr/local/lib \
    --with-bugurl=https://bugs.archlinux.org/ \
    --enable-cet \
    --enable-deterministic-archives \
    --disable-gold \
    --enable-install-libiberty \
    --enable-ld=default \
    --enable-lto \
    --enable-plugins \
    --enable-relro \
    --enable-shared \
    --enable-targets=all \
    --enable-threads \
    --disable-gdb \
    --disable-gdbserver \
    --disable-libdecnumber \
    --disable-readline \
    --disable-sim \
    --disable-werror \
    --with-debuginfod=no \
    --with-pic \
    --with-system-zlib \
    --with-abi=lp64d \
    --with-endlan=little 

  make -O tooldir=/usr

  # Extract the FSF All Permissive License
  # <https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html>
  # used for some linker scripts.
#  tail -n 5 "${srcdir}"/binutils-${pkgver}/ld/scripttempl/README > FSFAP
}

check() {
  cd binutils-build

  # Use minimal flags for testsuite
  # ld testsuite uses CFLAGS_FOR_TARGET and requires -g
  # gold testsuite requires CXXFLAGS/CFLAGS with default PIE/PIC disabled
  make -O CFLAGS_FOR_TARGET="-O2 -g" \
          CXXFLAGS="-O2 -no-pie -fno-PIC" \
          CFLAGS="-O2 -no-pie" \
          LDFLAGS="" \
          check
}

package() {
  cd binutils-build
  make prefix="$pkgdir/usr" tooldir="$pkgdir/usr" install

  # install PIC version of libiberty
  install -m644 libiberty/pic/libiberty.a "$pkgdir/usr/lib"

  # Remove unwanted files
  rm -f "$pkgdir"/usr/share/man/man1/{dlltool,windres,windmc}*

  # No shared linking to these files outside binutils
  rm -f "$pkgdir"/usr/lib/lib{bfd,opcodes}.so
  echo 'INPUT( /usr/lib/libbfd.a -liberty -lz -ldl )' > "$pkgdir/usr/lib/libbfd.so"
  echo 'INPUT( /usr/lib/libopcodes.a -lbfd )' > "$pkgdir/usr/lib/libopcodes.so"

  # install FSF All Permissive License
#  install -Dm644 -t "${pkgdir}"/usr/share/licenses/${pkgname}/ FSFAP

  #mv "$pkgdir"/usr/lib64/* "$pkgdir"/usr/lib/; rm -rf "$pkgdir"/usr/lib64
}
